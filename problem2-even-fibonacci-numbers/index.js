// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

function fibonacciSequence() {
  let fibonacciArr = [1, 2],
      index = 0,
      sum,
      evenNumArr =[];

  while (fibonacciArr[fibonacciArr.length - 1] <= 4000000) {
    sum = fibonacciArr[index] + fibonacciArr[index + 1];
    fibonacciArr.push(sum);
    index++;
  }

  fibonacciArr.forEach(number => {
    if (isEven(number)) {
      evenNumArr.push(number)
    }
  });

  return sumOfEvenNumbers(evenNumArr);
}

function isEven(num) {
  if (num % 2 === 0) {
    return true
  } else {
    return false
  }
}

function sumOfEvenNumbers(arr) {
  return arr.reduce((partialSum, i) => partialSum + i);
}
